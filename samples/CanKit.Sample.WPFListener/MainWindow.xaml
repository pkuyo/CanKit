<Window x:Class="EndpointListenerWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EndpointListenerWpf"
        mc:Ignorable="d"
        Title="CanKit Listener Sample" Height="560" Width="1100">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </Window.Resources>

    <Grid Margin="16">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="360"/>  <!-- Left: endpoint + logs -->
            <ColumnDefinition Width="12"/>   <!-- gutter -->
            <ColumnDefinition Width="*"/>    <!-- Right: frames -->
        </Grid.ColumnDefinitions>

        <!-- Left panel: endpoints + logs -->
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Endpoint selection row -->
            <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="0,0,0,8">
                <TextBlock Text="Endpoint:" VerticalAlignment="Center" Margin="0,0,8,0" Width="60"/>
                <ComboBox Width="320"
                          ItemsSource="{Binding Endpoints}"
                          SelectedItem="{Binding SelectedEndpoint}"
                          DisplayMemberPath="DisplayName"/>
                <Button Content="Refresh" Margin="8,0,0,0" Padding="12,4" Command="{Binding RefreshEndpointsCommand}"/>
            </StackPanel>

            <!-- Custom endpoint input -->
            <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="0,0,0,12">
                <TextBlock Text="Custom:" VerticalAlignment="Center" Margin="0,0,8,0" Width="60"
                           Visibility="{Binding IsCustomSelected, Converter={StaticResource BoolToVis}}"/>
                <TextBox Width="320" Text="{Binding CustomEndpoint, UpdateSourceTrigger=PropertyChanged}"
                         Visibility="{Binding IsCustomSelected, Converter={StaticResource BoolToVis}}"  Padding="0,3,0,2"/>
                <Button Content="Open" Margin="8,0,0,0" Padding="12,4" Command="{Binding OpenCustomEndpointCommand}" 
                        Visibility="{Binding IsCustomSelected, Converter={StaticResource BoolToVis}}"/>
                <TextBlock Margin="8,0,0,0" VerticalAlignment="Center" Foreground="Gray" Text="Select an endpoint or choose Custom to input manually."
                           Visibility="{Binding IsCustomSelected, Converter={StaticResource InverseBoolToVis}}"/>
            </StackPanel>

            <!-- Logs -->
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="Logs" FontWeight="Bold" Margin="0,0,0,4" Grid.Row="0"/>
                <Border Grid.Row="1" BorderThickness="1" BorderBrush="#DDD">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding Logs}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock FontFamily="Consolas" Text="{Binding}"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Grid>

        <!-- Right panel: Frames list -->
        <Border Grid.Row="0" Grid.Column="2" BorderThickness="1" BorderBrush="#DDD" SnapsToDevicePixels="True" UseLayoutRounding="True">
            <DataGrid  x:Name="FramesGrid" ItemsSource="{Binding Frames}"
                      AutoGenerateColumns="False"
                      HeadersVisibility="Column"
                      IsReadOnly="True"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      EnableRowVirtualization="True"
                      ScrollViewer.CanContentScroll="True"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling">
                <DataGrid.Resources>
                    <Style TargetType="DataGridRow">
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu DataContext="{Binding DataContext, Source={x:Reference FramesGrid}}">
                                    <MenuItem Header="Copy to Clipboard"
                                        Command="{Binding CopyFrameToClipboardCommand}"
                                        CommandParameter="{Binding PlacementTarget.DataContext,
                                        RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Time" Binding="{Binding Time}" Width="110"/>
                    <DataGridTextColumn Header="Dir" Binding="{Binding Dir}" Width="60"/>
                    <DataGridTextColumn Header="Proto" Binding="{Binding Kind}" Width="80"/>
                    <DataGridTextColumn Header="ID" Binding="{Binding Id}" Width="120"/>
                    <DataGridTextColumn Header="DLC" Binding="{Binding Dlc}" Width="60"/>
                    <DataGridTextColumn Header="Data" Binding="{Binding Data}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

        <!-- Bottom Controls spanning both sides -->
        <Grid Grid.Row="1" Grid.ColumnSpan="3" Margin="0,12,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Content="Send..." Width="100" Margin="10,0,8,0"
                    Command="{Binding OpenSendDialogCommand}"/>
            <Button Grid.Column="1" Content="Periodic..." Width="110" Margin="0,0,8,0"
                    Command="{Binding OpenPeriodicDialogCommand}"/>
            
            <Button Grid.Column="3" Content="Start" Width="100" Margin="0,0,8,0"
                    Command="{Binding StartListeningCommand}"/>
            <Button Grid.Column="4" Content="Stop" Width="100"
                    Command="{Binding StopListeningCommand}"/>
        </Grid>
    </Grid>
</Window>
